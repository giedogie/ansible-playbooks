
- name: install updates (Ubuntu)
  tags: always
  apt:
    upgrade: dist
    update_cache: yes

- name: Set Timezone to Europe/Warsaw
  timezone:
    name: Europe/Warsaw 

- name: Install packages
  apt: name={{ item }} update_cache=yes state=latest
  loop: [ 'nano', 'vim', 'ufw', 'net-tools', 'qemu-guest-agent', 'docker.io', 'curl', 'containerd', 'apt-transport-https', 'ca-certificates', 'gpg']

- name: disable SWAP (Kubeadm requirement)
  shell: |
      swapoff -a

- name: disable SWAP in fstab (Kubeadm requirement)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: create an empty file for the Containerd module
  copy:
    content: ""
    dest: /etc/modules-load.d/k8s.conf
    force: no
   
- name: Reboot the machine
  reboot:

- name: configure modules for Containerd
  blockinfile:
    path: /etc/modules-load.d/k8s.conf
    block: |
      overlay
      br_netfilter

- name: create an empty file for Kubernetes sysctl params
  copy:
    content: ""
    dest: /etc/sysctl.d/k8s.conf
    force: no

- name: configure sysctl params for Kubernetes
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: "{{ item }}"
  loop:
    - net.bridge.bridge-nf-call-iptables=1
    - net.ipv4.ip_forward=1
    - net.bridge.bridge-nf-call-ip6tables=1

- name: apply sysctl params without reboot
  command: sysctl --system

- name: load modules and check if they are running
  shell: |
      modprobe overlay
      modprobe br_netfilter
      lsmod | grep br_netfilter
      lsmod | grep overlay
      sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward  

- name: create Containerd directory
  file:
    path: /etc/containerd
    state: directory

- name: add Containerd configuration
  shell: /usr/bin/containerd config default > /etc/containerd/config.toml

- name: configuring the systemd cgroup driver for Containerd
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '            SystemdCgroup = false'
    line: '            SystemdCgroup = true'

- name: enable the Containerd service and start it
  systemd:
    name: containerd
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Add apt key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add Kubernetes apt repository
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Kubernetes
  apt: name={{ item }} update_cache=yes state=latest
  loop: [ 'kubelet', 'kubeadm', 'kubectl', ]
 